#说明:
#  log4j可以按时间,文件大小产生新的日志文件
#
#  格式化符号说明：
#  %p：输出日志信息的优先级，即DEBUG，INFO，WARN，ERROR，FATAL。
#  %d：输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，如：%d{yyyy/MM/dd HH:mm:ss,SSS}。
#  %r：输出自应用程序启动到输出该log信息耗费的毫秒数。
#  %t：输出产生该日志事件的线程名。
#  %l：输出日志事件的发生位置，相当于%c.%M(%F:%L)的组合，包括类全名、方法、文件名以及在代码中的行数。例如：test.TestLog4j.main(TestLog4j.java:10)。
#  %c：输出日志信息所属的类目，通常就是所在类的全名。
#  %M：输出产生日志信息的方法名。
#  %F：输出日志消息产生时所在的文件名称。
#  %L:：输出代码中的行号。
#  %m:：输出代码中指定的具体日志信息。
#  %n：输出一个回车换行符，Windows平台为"rn"，Unix平台为"n"。
#  %x：输出和当前线程相关联的NDC(嵌套诊断环境)，尤其用到像java servlets这样的多客户多线程的应用中。
#  %%：输出一个"%"字符。
#  另外，还可以在%与格式字符之间加上修饰符来控制其最小长度、最大长度、和文本的对齐方式。如：
#  1) c：指定输出category的名称，最小的长度是20，如果category的名称长度小于20的话，默认的情况下右对齐。
#  2)%-20c："-"号表示左对齐。
#  3)%.30c：指定输出category的名称，最大的长度是30，如果category的名称长度大于30的话，就会将左边多出的字符截掉，但小于30的话也不会补空格。
#
#
#  参考:
#  http://www.cnblogs.com/ITtangtang/p/3926665.html
#  http://blog.csdn.net/anlina_1984/article/details/5313023
#  http://www.cnblogs.com/ITEagle/archive/2010/04/23/1718365.html
#
#
#############################################################################################################################################

log4j.rootLogger=debug,console,file,socket,mail,database,im

#控制台输出
log4j.appender.console=org.apache.log4j.ConsoleAppender
log4j.appender.console.Target=System.out
#log4j.appender.console.ImmediateFlush=false
log4j.appender.console.layout=org.apache.log4j.PatternLayout
log4j.appender.console.layout.ConversionPattern=%d{yyyy/MM/dd HH:mm:ss SSS} %p %m (%F:%L) [%t]%n
log4j.appender.console.threshold=info

####################  按时间(周期)生成新的日志文件  ####################
# 每周一个文件
log4j.appender.file=org.apache.log4j.DailyRollingFileAppender
log4j.appender.file.File=./LogFile.log
log4j.appender.file.Append=true
log4j.appender.file.layout=org.apache.log4j.PatternLayout
log4j.appender.file.layout.ConversionPattern=%d{yyyy/MM/dd HH:mm:ss.SSS} %p %m (%C{1}:%L)%n
log4j.appender.file.encoding=UTF-8
log4j.appender.file.DatePattern='.'yyyy-ww
log4j.appender.file.threshold=info

# 每天一个文件
log4j.appender.file=org.apache.log4j.DailyRollingFileAppender
log4j.appender.file.File=./LogFile.log
log4j.appender.file.Append=true
log4j.appender.file.layout=org.apache.log4j.PatternLayout
log4j.appender.file.layout.ConversionPattern=%d{yyyy/MM/dd HH:mm:ss.SSS} %p %m (%C{1}:%L)%n
log4j.appender.file.encoding=UTF-8
log4j.appender.file.DatePattern='.'yyyy-MM-dd
log4j.appender.file.threshold=info

# 每小时一个文件
log4j.appender.file=org.apache.log4j.DailyRollingFileAppender
log4j.appender.file.File=./LogFile.log
log4j.appender.file.Append=true
log4j.appender.file.layout=org.apache.log4j.PatternLayout
log4j.appender.file.layout.ConversionPattern=%d{yyyy/MM/dd HH:mm:ss.SSS} %p %m (%C{1}:%L)%n
log4j.appender.file.encoding=UTF-8
log4j.appender.file.DatePattern='.'yyyy-MM-dd-HH
log4j.appender.file.threshold=info


####################  按日志文件大小生成新的日志文件  ####################
log4j.appender.file=org.apache.log4j.RollingFileAppender
log4j.appender.file.File=./LogFile.log
log4j.appender.file.Append=true
log4j.appender.file.MaxFileSize=200KB
log4j.appender.file.MaxBackupIndex=50
log4j.appender.file.layout=org.apache.log4j.PatternLayout
log4j.appender.file.layout.ConversionPattern=%d{yyyy/MM/dd HH:mm:ss.SSS} %p %m (%C{1}:%L)%n
log4j.appender.file.threshold=info


####################  单个日志文件  ####################
log4j.appender.file=org.apache.log4j.FileAppender
log4j.appender.file.Threshold=DEBUG
log4j.appender.file.Append=true
log4j.appender.file.File=./LogFile.log
log4j.appender.file.layout=org.apache.log4j.PatternLayout
log4j.appender.file.layout.ConversionPattern=%d{yyyy/MM/dd HH:mm:ss.SSS} %p %m (%C{1}:%L)%n


####################  ???异步日志文件  ####################
log4j.appender.file=org.apache.log4j.AsyncAppender
log4j.appender.file.Threshold=DEBUG
log4j.appender.file.BufferSize=100
log4j.appender.file.Append=true
log4j.appender.file.File=./LogFile.log
log4j.appender.file.layout=org.apache.log4j.PatternLayout
log4j.appender.file.layout.ConversionPattern=%d{yyyy/MM/dd HH:mm:ss.SSS} %p %m (%C{1}:%L)%n


####################  应用于socket  ####################
log4j.appender.socket=org.apache.log4j.RollingFileAppender
log4j.appender.socket.RemoteHost=localhost
log4j.appender.socket.Port=5001
log4j.appender.socket.LocationInfo=true
# Set up for Log Factor 5
log4j.appender.socket.layout=org.apache.log4j.PatternLayout
log4j.appender.socket.layout.ConversionPattern=[%-5p] %d(%r) --> [%t] %l: %m %x %n
# Log Factor 5 Appender
log4j.appender.LF5_APPENDER=org.apache.log4j.lf5.LF5Appender
log4j.appender.LF5_APPENDER.MaxNumberOfRecords=2000


####################  发送日志到指定邮件  ####################
log4j.appender.mail=org.apache.log4j.net.SMTPAppender
log4j.appender.mail.Threshold=FATAL
log4j.appender.mail.BufferSize=10
log4j.appender.mail.From = xxx@mail.com
log4j.appender.mail.SMTPHost=mail.com
log4j.appender.mail.Subject=Log4J Message
log4j.appender.mail.To= xxx@mail.com
log4j.appender.mail.layout=org.apache.log4j.PatternLayout
log4j.appender.mail.layout.ConversionPattern=[%-5p] %d(%r) --> [%t] %l: %m %x %n


####################  应用于数据库  ####################
log4j.appender.database=org.apache.log4j.jdbc.JDBCAppender
log4j.appender.database.URL=jdbc:mysql://localhost:3306/test
log4j.appender.database.driver=com.mysql.jdbc.Driver
log4j.appender.database.user=root
log4j.appender.database.password=root
log4j.appender.database.sql=INSERT INTO LOG4J (Message) VALUES('=[%-5p] %d(%r) --> [%t] %l: %m %x %n')
log4j.appender.database.layout=org.apache.log4j.PatternLayout
log4j.appender.database.layout.ConversionPattern=[%-5p] %d(%r) --> [%t] %l: %m %x %n


####################  自定义Appender  ####################
log4j.appender.im = net.cybercorlin.util.logger.appender.IMAppender
log4j.appender.im.host = mail.cybercorlin.net
log4j.appender.im.username = username
log4j.appender.im.password = password
log4j.appender.im.recipient = corlin@cybercorlin.net
log4j.appender.im.layout=org.apache.log4j.PatternLayout
log4j.appender.im.layout.ConversionPattern=[%-5p] %d(%r) --> [%t] %l: %m %x %n